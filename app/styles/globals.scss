@import 'css-reset';
@import 'typography';
@import 'variables';

/*-------------------------------------------------------*/
/* LAYOUT
/*-------------------------------------------------------*/

html, body {
  max-width: 100vw;
  min-width: 100%;
  min-height: 100%;
}

body {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: var(--pagePadding);
  padding: var(--pagePadding);
  overflow-x: hidden;
  overflow-y: auto;
  background-color: var(--fgColor);
  color: var(--bodyColor);
  font-family: var(--font-oxanium);

  // Colors
  --bgColor: white;
  --fgColor: red;
  --bodyColor: black;
  --accentColor: white;

  // Spacing
  --gap: 2rem; // Static
  --pagePadding: clamp(1rem, 3vw, 2rem); // Dynamic

  // Sizing
  --borderWidth: 2px; // Equal to 1 pixel of the dither effects
  --cornerRadius: .5rem; // General-use corner radius value for consistency
  --titleSize: clamp(2.5rem, 5vw, 4rem); // Size of primary titles

  // Misc
  --gridSize: calc(var(--borderWidth) * 8); // Size of the background grid cells

  // Grid background
  &:before {
    content: '';
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-image: linear-gradient(var(--bgColor) calc(var(--gridSize) - var(--borderWidth)), transparent 1%),
                    linear-gradient(90deg, var(--bgColor) calc(var(--gridSize) - var(--borderWidth)), transparent 1%);
    background-size: var(--gridSize) var(--gridSize), var(--gridSize) var(--gridSize);
    background-position: top calc(var(--gridSize) / 2 - var(--borderWidth)) left calc(var(--gridSize) / 2 - var(--borderWidth));
    background-attachment: fixed;
    z-index: -2;
  }

  // Page border
  &:after {
    content: '';
    box-sizing: content-box;
    position: fixed;
    top: calc(var(--pagePadding) - var(--borderWidth));
    bottom: calc(var(--pagePadding) - var(--borderWidth));
    left: calc(var(--pagePadding) - var(--borderWidth));
    right: calc(var(--pagePadding) - var(--borderWidth));
    border: solid var(--borderWidth) var(--fgColor);
    border-radius: calc(var(--pagePadding) + var(--borderWidth));
    outline: solid calc(var(--pagePadding) * 2) var(--bgColor);
    pointer-events: none;
    z-index: 10;
  }
}

main {
  box-sizing: border-box;
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: var(--gap);
  padding: var(--pagePadding) var(--pagePadding) calc(var(--pagePadding) + 3rem) var(--pagePadding);
  view-transition-name: page-content;
}



/*-------------------------------------------------------*/
/* TRANSITIONS
/*-------------------------------------------------------*/

@keyframes fade-in {
  from { opacity: 0; }
}

@keyframes fade-out {
  to { opacity: 0; }
}

@keyframes slide-from-right {
  from { transform: translateX(30px); }
}

@keyframes slide-to-left {
  to { transform: translateX(-30px); }
}

::view-transition-old(page-content) {
  animation: 90ms cubic-bezier(0.4, 0, 1, 1) both fade-out,
    300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-left;
}

::view-transition-new(page-content) {
  animation: 210ms cubic-bezier(0, 0, 0.2, 1) 90ms both fade-in,
    300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
}


/*-------------------------------------------------------*/
/* ELEMENTS
/*-------------------------------------------------------*/

canvas {
  image-rendering: pixelated;
}