@import 'css-reset';
@import 'typography';
@import 'variables';

/*-------------------------------------------------------*/
/* LAYOUT
/*-------------------------------------------------------*/

html {
  max-width: 100dvw;
  min-width: 100%;
  min-height: 100%;
  background-color: var(--bgColor);

  // Colors
  --bgColor: rgb(219, 216, 206);
  --fgColor: red;
  --bodyColor: black;
  --accentColor: white;

  // Spacing
  --gap: 2rem; // Static
  --pagePadding: clamp(1rem, 3vw, 2rem); // Dynamic

  // Sizing
  --borderWidth: 2px; // Equal to 1 pixel of the dither effects
  --cornerRadius: .5rem; // General-use corner radius value for consistency
  --titleSize: clamp(2.5rem, 5vw, 4rem); // Size of primary titles

  // Misc
  --gridSize: calc(var(--borderWidth) * 8); // Size of the background grid cells
  --pageTitleNominalDim: 2rem; // Height (desktop) or width (mobile) of the title container--set via JS
}

body {
  max-width: 100%;
  min-width: 100%;
  min-height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: var(--pagePadding);
  padding: calc(var(--pagePadding) + env(safe-area-inset-top)),
           calc(var(--pagePadding) + env(safe-area-inset-right)),
           calc(var(--pagePadding) + env(safe-area-inset-bottom)),
           calc(var(--pagePadding) + env(safe-area-inset-left));
  overflow-x: hidden;
  overflow-y: auto;
  background-color: var(--bgColor);
  color: var(--bodyColor);
  font-family: var(--font-oxanium);

  // Grid background
  &:before {
    content: '';
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: var(--fgColor);
    background-image: linear-gradient(var(--bgColor) calc(var(--gridSize) - var(--borderWidth)), transparent 1%),
                    linear-gradient(90deg, var(--bgColor) calc(var(--gridSize) - var(--borderWidth)), transparent 1%);
    background-size: var(--gridSize) var(--gridSize), var(--gridSize) var(--gridSize);
    background-position: top calc(var(--gridSize) / 2 - var(--borderWidth)) left calc(var(--gridSize) / 2 - var(--borderWidth));
    background-attachment: fixed;
    z-index: 0;
  }

  // Device size flag that can be picked up by JS
  &:after {
    content: 'mobile';
    position: fixed;
    opacity: 0;
    pointer-events: none;
  }

  @media( min-width: #{$break-mobile} ) {
    &:after {
      content: 'desktop';
    }
  }
}

main {
  box-sizing: border-box;
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: var(--gap);
  padding: var(--pagePadding);
  z-index: 1;

  @media( min-width: #{$break-mobile} ){
    padding: calc(var(--pagePadding) + var(--pageTitleNominalDim)) var(--pagePadding) calc(var(--pagePadding) + 3rem) var(--pagePadding);
  }
}



/*-------------------------------------------------------*/
/* ELEMENTS
/*-------------------------------------------------------*/

canvas {
  image-rendering: pixelated;
}